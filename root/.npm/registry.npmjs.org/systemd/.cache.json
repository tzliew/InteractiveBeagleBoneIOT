{"_id":"systemd","_rev":"24-4802e60abc162fa5b10a2359c53b529e","name":"systemd","description":"systemd socket activation support for Node.js","dist-tags":{"latest":"0.2.6"},"versions":{"0.0.1":{"name":"systemd","version":"0.0.1","main":"./lib/systemd.js","description":"systemd socket activation support for Node.js","keywords":["systemd"],"url":"http://github.com/rubenv/node-systemd","repositories":[{"type":"git","url":"git://github.com/rubenv/node-systemd.git"}],"author":{"name":"Ruben Vermeersch","email":"ruben@savanne.be"},"contributors":[],"licenses":["MIT"],"dependencies":{},"engines":{"node":">=0.4.0 <0.5.0"},"scripts":{"install":"node-waf configure build"},"_npmUser":{"name":"rubenv","email":"ruben@savanne.be"},"_id":"systemd@0.0.1","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.93","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"bc34787051d27193c2eca0effb76bc702e15b728","tarball":"https://registry.npmjs.org/systemd/-/systemd-0.0.1.tgz"},"maintainers":[{"name":"rubenv","email":"ruben@savanne.be"}],"directories":{}},"0.0.2":{"name":"systemd","version":"0.0.2","main":"./lib/systemd.js","description":"systemd socket activation support for Node.js","keywords":["systemd"],"url":"http://github.com/rubenv/node-systemd","repositories":[{"type":"git","url":"git://github.com/rubenv/node-systemd.git"}],"author":{"name":"Ruben Vermeersch","email":"ruben@savanne.be"},"contributors":[],"licenses":["MIT"],"dependencies":{},"engines":{"node":">=0.4.0 <0.5.0"},"scripts":{"install":"node-waf configure build"},"_npmUser":{"name":"rubenv","email":"ruben@savanne.be"},"_id":"systemd@0.0.2","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.93","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"19cf37722216429bb75ab4ffa8d49d597ceb48b6","tarball":"https://registry.npmjs.org/systemd/-/systemd-0.0.2.tgz"},"maintainers":[{"name":"rubenv","email":"ruben@savanne.be"}],"directories":{}},"0.2.0":{"name":"systemd","version":"0.2.0","main":"./lib/systemd.js","description":"systemd socket activation support for Node.js","keywords":["systemd"],"url":"http://github.com/rubenv/node-systemd","repositories":[{"type":"git","url":"git://github.com/rubenv/node-systemd.git"}],"author":{"name":"Ruben Vermeersch","email":"ruben@savanne.be"},"contributors":[],"licenses":["MIT"],"dependencies":{},"engines":{"node":">=0.6.11 <0.8.0"},"_npmUser":{"name":"rubenv","email":"ruben@savanne.be"},"_id":"systemd@0.2.0","devDependencies":{},"_engineSupported":false,"_npmVersion":"1.0.93","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"99d71cc1c4184ada0de27efe114e30f89feded9f","tarball":"https://registry.npmjs.org/systemd/-/systemd-0.2.0.tgz"},"maintainers":[{"name":"rubenv","email":"ruben@savanne.be"}],"directories":{}},"0.2.1":{"name":"systemd","version":"0.2.1","main":"./lib/systemd.js","description":"systemd socket activation support for Node.js","keywords":["systemd"],"url":"http://github.com/rubenv/node-systemd","repositories":[{"type":"git","url":"git://github.com/rubenv/node-systemd.git"}],"author":{"name":"Ruben Vermeersch","email":"ruben@savanne.be"},"contributors":[],"licenses":["MIT"],"dependencies":{},"engines":{"node":">=0.6.11 <0.9.0"},"readme":"# systemd for Node.js\n\n  Adds support for running node.js as a socket-activated service under systemd.\n  \n  For more background on socket activation: http://0pointer.de/blog/projects/socket-activation.html\n\n  Obviously, this will only work on Linux distributions with systemd (such as Fedora).\n\n  Developed by Flow Pilots: http://www.flowpilots.com/\n\n## Usage\n  \n  You can install the latest version via npm:\n  \n    $ npm install systemd\n\n  Require the systemd module and pass 'systemd' as a parameter to listen():\n\n    require('systemd');\n\n    var http = require('http');\n    http.createServer(function (req, res) {\n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end('Hello World\\n');\n    }).listen('systemd');\n  \n  Install a systemd socket file (e.g.: /etc/systemd/system/node-hello.socket):\n\n    [Socket]\n    ListenStream=1337\n\n    [Install]\n    WantedBy=sockets.target\n\n  Install a systemd service file (e.g.: /etc/systemd/system/node-hello.service):\n\n    # Adjust according to man 5 systemd.exec\n\n    [Service]\n    ExecStart=/path/to/bin/node /path/to/hello.js\n    StandardOutput=syslog\n    User=nobody\n    Group=nobody\n\n  Be sure to subtitute the paths to node and your script!\n\n  Enable and start the socket:\n\n    systemctl enable node-hello.socket\n    systemctl start node-hello.socket\n\n  Check the status of the socket:\n\n    # systemctl status node-hello.socket\n    node-hello.socket\n          Loaded: loaded (/etc/systemd/system/node-hello.socket)\n          Active: active (listening) since Sat, 15 Oct 2011 20:27:47 +0200; 2s ago\n          CGroup: name=systemd:/system/node-hello.socket\n\n  Great, it's running!\n\n  Enable the service:\n\n    systemctl enable node-hello.service\n\n  Check the status, not running yet:\n\n    # systemctl status node-hello.service\n    node-hello.service\n          Loaded: loaded (/etc/systemd/system/node-hello.service)\n          Active: inactive (dead)\n          CGroup: name=systemd:/system/node-hello.service\n\n  Do a request to your service:\n\n    # curl -i http://localhost:1337/\n    HTTP/1.1 200 OK\n    Content-Type: text/plain\n    Connection: keep-alive\n    Transfer-Encoding: chunked\n    \n    Hello World\n\n  Check again, now it will be running:\n\n    # systemctl status node-hello.service\n    node-hello.service\n          Loaded: loaded (/etc/systemd/system/node-hello.service)\n          Active: active (running) since Sat, 15 Oct 2011 20:32:10 +0200; 38s ago\n        Main PID: 1159 (node)\n          CGroup: name=systemd:/system/node-hello.service\n                  â”” 1159 /path/to/bin/node /path/to/hello.js\n\n## Only listen to systemd when running under systemd\n\n  You can make the systemd usage conditional by checking for the systemd environment variable:\n\n    var http = require('http');\n    \n    require('systemd');\n    \n    var port = process.env.LISTEN_PID > 0 ? 'systemd' : 1337;\n    http.createServer(function (req, res) {\n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end('Hello World\\n');\n    }).listen(port);\n\n  This makes it possible to run the script stand-alone in development, yet use systemd when started through systemd.\n    \n## License \n\n    (The MIT License)\n\n    Copyright (C) 2011-2012 by Ruben Vermeersch <ruben@savanne.be>\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n","_id":"systemd@0.2.1","dist":{"shasum":"f84d2b3c8fa5befff7a9567141fb6263e379c99c","tarball":"https://registry.npmjs.org/systemd/-/systemd-0.2.1.tgz"},"maintainers":[{"name":"rubenv","email":"ruben@savanne.be"}],"directories":{}},"0.2.2":{"name":"systemd","version":"0.2.2","main":"./lib/systemd.js","description":"systemd socket activation support for Node.js","keywords":["systemd"],"url":"http://github.com/rubenv/node-systemd","repositories":[{"type":"git","url":"git://github.com/rubenv/node-systemd.git"}],"author":{"name":"Ruben Vermeersch","email":"ruben@savanne.be"},"contributors":[],"licenses":["MIT"],"dependencies":{},"engines":{"node":">=0.6.11 <0.9.0"},"readme":"# systemd for Node.js\n\n  Adds support for running node.js as a socket-activated service under systemd.\n  \n  For more background on socket activation: http://0pointer.de/blog/projects/socket-activation.html\n\n  Obviously, this will only work on Linux distributions with systemd (such as Fedora).\n\n  Developed by Flow Pilots: http://www.flowpilots.com/\n\n## Usage\n  \n  You can install the latest version via npm:\n  \n    $ npm install systemd\n\n  Require the systemd module and pass 'systemd' as a parameter to listen():\n\n    require('systemd');\n\n    var http = require('http');\n    http.createServer(function (req, res) {\n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end('Hello World\\n');\n    }).listen('systemd');\n  \n  Install a systemd socket file (e.g.: /etc/systemd/system/node-hello.socket):\n\n    [Socket]\n    ListenStream=1337\n\n    [Install]\n    WantedBy=sockets.target\n\n  Install a systemd service file (e.g.: /etc/systemd/system/node-hello.service):\n\n    # Adjust according to man 5 systemd.exec\n\n    [Service]\n    ExecStart=/path/to/bin/node /path/to/hello.js\n    StandardOutput=syslog\n    User=nobody\n    Group=nobody\n\n  Be sure to subtitute the paths to node and your script!\n\n  Reload the systemd daemon so that it picks up the new unit files:\n\n    systemctl --system daemon-reload\n\n  Enable and start the socket:\n\n    systemctl enable node-hello.socket\n    systemctl start node-hello.socket\n\n  Check the status of the socket:\n\n    # systemctl status node-hello.socket\n    node-hello.socket\n          Loaded: loaded (/etc/systemd/system/node-hello.socket)\n          Active: active (listening) since Sat, 15 Oct 2011 20:27:47 +0200; 2s ago\n          CGroup: name=systemd:/system/node-hello.socket\n\n  Great, it's running!\n\n  Check the status of the service, not running yet:\n\n    # systemctl status node-hello.service\n    node-hello.service\n          Loaded: loaded (/etc/systemd/system/node-hello.service)\n          Active: inactive (dead)\n          CGroup: name=systemd:/system/node-hello.service\n\n  Do a request to your service:\n\n    # curl -i http://localhost:1337/\n    HTTP/1.1 200 OK\n    Content-Type: text/plain\n    Connection: keep-alive\n    Transfer-Encoding: chunked\n    \n    Hello World\n\n  Check again, now it will be running:\n\n    # systemctl status node-hello.service\n    node-hello.service\n          Loaded: loaded (/etc/systemd/system/node-hello.service)\n          Active: active (running) since Sat, 15 Oct 2011 20:32:10 +0200; 38s ago\n        Main PID: 1159 (node)\n          CGroup: name=systemd:/system/node-hello.service\n                  â”” 1159 /path/to/bin/node /path/to/hello.js\n\n## Only listen to systemd when running under systemd\n\n  You can make the systemd usage conditional by checking for the systemd environment variable:\n\n    var http = require('http');\n    \n    require('systemd');\n    \n    var port = process.env.LISTEN_PID > 0 ? 'systemd' : 1337;\n    http.createServer(function (req, res) {\n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end('Hello World\\n');\n    }).listen(port);\n\n  This makes it possible to run the script stand-alone in development, yet use systemd when started through systemd.\n    \n## License \n\n    (The MIT License)\n\n    Copyright (C) 2011-2012 by Ruben Vermeersch <ruben@savanne.be>\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n","_id":"systemd@0.2.2","dist":{"shasum":"062755126d36a9cddf409791b0f1a168a8a677da","tarball":"https://registry.npmjs.org/systemd/-/systemd-0.2.2.tgz"},"maintainers":[{"name":"rubenv","email":"ruben@savanne.be"}],"directories":{}},"0.2.3":{"name":"systemd","version":"0.2.3","main":"./lib/systemd.js","description":"systemd socket activation support for Node.js","keywords":["systemd"],"url":"http://github.com/rubenv/node-systemd","repositories":[{"type":"git","url":"git://github.com/rubenv/node-systemd.git"}],"bugs":{"url":"https://github.com/rubenv/node-systemd/issues"},"author":{"name":"Ruben Vermeersch","email":"ruben@savanne.be","url":"http://savanne.be/"},"contributors":[],"licenses":[{"type":"MIT","url":"https://github.com/rubenv/node-systemd/blob/master/LICENSE"}],"dependencies":{},"engines":{"node":">=0.6.11 <0.11.0"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-jshint":"~0.2.0"},"readme":"# systemd for Node.js\n\n  Adds support for running node.js as a socket-activated service under systemd.\n\n  More info on the how and why: http://savanne.be/articles/deploying-node-js-with-systemd/\n  \n  For more background on socket activation: http://0pointer.de/blog/projects/socket-activation.html\n\n  Obviously, this will only work on Linux distributions with systemd (such as Fedora).\n\n  Developed by Flow Pilots: http://www.flowpilots.com/\n\n## Usage\n  \n  You can install the latest version via npm:\n  \n    $ npm install systemd\n\n  Require the systemd module and pass 'systemd' as a parameter to listen():\n\n    require('systemd');\n\n    var http = require('http');\n    http.createServer(function (req, res) {\n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end('Hello World\\n');\n    }).listen('systemd');\n  \n  Install a systemd socket file (e.g.: /etc/systemd/system/node-hello.socket):\n\n    [Socket]\n    ListenStream=1337\n\n    [Install]\n    WantedBy=sockets.target\n\n  Install a systemd service file (e.g.: /etc/systemd/system/node-hello.service):\n\n    # Adjust according to man 5 systemd.exec\n\n    [Service]\n    ExecStart=/path/to/bin/node /path/to/hello.js\n    StandardOutput=syslog\n    User=nobody\n    Group=nobody\n\n  Be sure to subtitute the paths to node and your script!\n\n  Reload the systemd daemon so that it picks up the new unit files:\n\n    systemctl --system daemon-reload\n\n  Enable and start the socket:\n\n    systemctl enable node-hello.socket\n    systemctl start node-hello.socket\n\n  Check the status of the socket:\n\n    # systemctl status node-hello.socket\n    node-hello.socket\n          Loaded: loaded (/etc/systemd/system/node-hello.socket)\n          Active: active (listening) since Sat, 15 Oct 2011 20:27:47 +0200; 2s ago\n          CGroup: name=systemd:/system/node-hello.socket\n\n  Great, it's running!\n\n  Check the status of the service, not running yet:\n\n    # systemctl status node-hello.service\n    node-hello.service\n          Loaded: loaded (/etc/systemd/system/node-hello.service)\n          Active: inactive (dead)\n          CGroup: name=systemd:/system/node-hello.service\n\n  Do a request to your service:\n\n    # curl -i http://localhost:1337/\n    HTTP/1.1 200 OK\n    Content-Type: text/plain\n    Connection: keep-alive\n    Transfer-Encoding: chunked\n    \n    Hello World\n\n  Check again, now it will be running:\n\n    # systemctl status node-hello.service\n    node-hello.service\n          Loaded: loaded (/etc/systemd/system/node-hello.service)\n          Active: active (running) since Sat, 15 Oct 2011 20:32:10 +0200; 38s ago\n        Main PID: 1159 (node)\n          CGroup: name=systemd:/system/node-hello.service\n                  â”” 1159 /path/to/bin/node /path/to/hello.js\n\n## Only listen to systemd when running under systemd\n\n  You can make the systemd usage conditional by checking for the systemd environment variable:\n\n    var http = require('http');\n    \n    require('systemd');\n    \n    var port = process.env.LISTEN_PID > 0 ? 'systemd' : 1337;\n    http.createServer(function (req, res) {\n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end('Hello World\\n');\n    }).listen(port);\n\n  This makes it possible to run the script stand-alone in development, yet use systemd when started through systemd.\n    \n## Contributing\n\n  A jshint file is included to check code style.\n\n  Before submitting a pull request, please check your code. For convenience, I've also added a grunt file.\n\n  Install the dev dependencies:\n\n    npm install --dev\n\n  Install the grunt cli if you haven't already done so:\n\n    npm -g install grunt-cli\n\n  Run it:\n\n    grunt\n\n## License \n\n    (The MIT License)\n\n    Copyright (C) 2011-2013 by Ruben Vermeersch <ruben@savanne.be>\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n","readmeFilename":"README.md","_id":"systemd@0.2.3","dist":{"shasum":"42105c7c919ce9a79f8db01d80adf9fbf84dbbf4","tarball":"https://registry.npmjs.org/systemd/-/systemd-0.2.3.tgz"},"_from":".","_npmVersion":"1.2.17","_npmUser":{"name":"rubenv","email":"ruben@savanne.be"},"maintainers":[{"name":"rubenv","email":"ruben@savanne.be"}],"directories":{}},"0.2.4":{"name":"systemd","version":"0.2.4","main":"./lib/systemd.js","description":"systemd socket activation support for Node.js","keywords":["systemd"],"url":"http://github.com/rubenv/node-systemd","repositories":[{"type":"git","url":"git://github.com/rubenv/node-systemd.git"}],"bugs":{"url":"https://github.com/rubenv/node-systemd/issues"},"author":{"name":"Ruben Vermeersch","email":"ruben@savanne.be","url":"http://savanne.be/"},"contributors":[],"licenses":[{"type":"MIT","url":"https://github.com/rubenv/node-systemd/blob/master/LICENSE"}],"dependencies":{},"engines":{"node":">=0.6.11 <0.11.0"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-jshint":"~0.2.0"},"readme":"# systemd for Node.js\n\n  Adds support for running node.js as a socket-activated service under systemd.\n\n  More info on the how and why: http://savanne.be/articles/deploying-node-js-with-systemd/\n  \n  For more background on socket activation: http://0pointer.de/blog/projects/socket-activation.html\n\n  Obviously, this will only work on Linux distributions with systemd (such as Fedora).\n\n  Developed by Flow Pilots: http://www.flowpilots.com/\n\n## Usage\n  \n  You can install the latest version via npm:\n  \n    $ npm install systemd\n\n  Require the systemd module and pass 'systemd' as a parameter to listen():\n\n    require('systemd');\n\n    var http = require('http');\n    http.createServer(function (req, res) {\n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end('Hello World\\n');\n    }).listen('systemd');\n  \n  Install a systemd socket file (e.g.: /etc/systemd/system/node-hello.socket):\n\n    [Socket]\n    ListenStream=1337\n\n    [Install]\n    WantedBy=sockets.target\n\n  Install a systemd service file (e.g.: /etc/systemd/system/node-hello.service):\n\n    # Adjust according to man 5 systemd.exec\n\n    [Service]\n    ExecStart=/path/to/bin/node /path/to/hello.js\n    StandardOutput=syslog\n    User=nobody\n    Group=nobody\n\n  Be sure to subtitute the paths to node and your script!\n\n  Reload the systemd daemon so that it picks up the new unit files:\n\n    systemctl --system daemon-reload\n\n  Enable and start the socket:\n\n    systemctl enable node-hello.socket\n    systemctl start node-hello.socket\n\n  Check the status of the socket:\n\n    # systemctl status node-hello.socket\n    node-hello.socket\n          Loaded: loaded (/etc/systemd/system/node-hello.socket)\n          Active: active (listening) since Sat, 15 Oct 2011 20:27:47 +0200; 2s ago\n          CGroup: name=systemd:/system/node-hello.socket\n\n  Great, it's running!\n\n  Check the status of the service, not running yet:\n\n    # systemctl status node-hello.service\n    node-hello.service\n          Loaded: loaded (/etc/systemd/system/node-hello.service)\n          Active: inactive (dead)\n          CGroup: name=systemd:/system/node-hello.service\n\n  Do a request to your service:\n\n    # curl -i http://localhost:1337/\n    HTTP/1.1 200 OK\n    Content-Type: text/plain\n    Connection: keep-alive\n    Transfer-Encoding: chunked\n    \n    Hello World\n\n  Check again, now it will be running:\n\n    # systemctl status node-hello.service\n    node-hello.service\n          Loaded: loaded (/etc/systemd/system/node-hello.service)\n          Active: active (running) since Sat, 15 Oct 2011 20:32:10 +0200; 38s ago\n        Main PID: 1159 (node)\n          CGroup: name=systemd:/system/node-hello.service\n                  â”” 1159 /path/to/bin/node /path/to/hello.js\n\n## Only listen to systemd when running under systemd\n\n  You can make the systemd usage conditional by checking for the systemd environment variable:\n\n    var http = require('http');\n    \n    require('systemd');\n    \n    var port = process.env.LISTEN_PID > 0 ? 'systemd' : 1337;\n    http.createServer(function (req, res) {\n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end('Hello World\\n');\n    }).listen(port);\n\n  This makes it possible to run the script stand-alone in development, yet use systemd when started through systemd.\n    \n## Contributing\n\n  A jshint file is included to check code style.\n\n  Before submitting a pull request, please check your code. For convenience, I've also added a grunt file.\n\n  Install the dev dependencies:\n\n    npm install --dev\n\n  Install the grunt cli if you haven't already done so:\n\n    npm -g install grunt-cli\n\n  Run it:\n\n    grunt\n\n## License \n\n    (The MIT License)\n\n    Copyright (C) 2011-2013 by Ruben Vermeersch <ruben@savanne.be>\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n","readmeFilename":"README.md","_id":"systemd@0.2.4","dist":{"shasum":"616b9030ac3757ac1fdd2cfc274fe3d9fbc97356","tarball":"https://registry.npmjs.org/systemd/-/systemd-0.2.4.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"rubenv","email":"ruben@savanne.be"},"maintainers":[{"name":"rubenv","email":"ruben@savanne.be"}],"directories":{}},"0.2.5":{"name":"systemd","version":"0.2.5","main":"./lib/systemd.js","description":"systemd socket activation support for Node.js","keywords":["systemd"],"url":"http://github.com/rubenv/node-systemd","repositories":[{"type":"git","url":"git://github.com/rubenv/node-systemd.git"}],"bugs":{"url":"https://github.com/rubenv/node-systemd/issues"},"author":{"name":"Ruben Vermeersch","email":"ruben@savanne.be","url":"http://savanne.be/"},"contributors":[],"licenses":[{"type":"MIT","url":"https://github.com/rubenv/node-systemd/blob/master/LICENSE"}],"dependencies":{},"engines":{"node":">=0.6.11 <0.11.0"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-jshint":"~0.2.0","grunt-release":"~0.5.1"},"readme":"# systemd for Node.js\n\n  Adds support for running node.js as a socket-activated service under systemd.\n\n  More info on the how and why: http://savanne.be/articles/deploying-node-js-with-systemd/\n  \n  For more background on socket activation: http://0pointer.de/blog/projects/socket-activation.html\n\n  Obviously, this will only work on Linux distributions with systemd (such as Fedora).\n\n  Developed by Flow Pilots: http://www.flowpilots.com/\n\n## Usage\n  \n  You can install the latest version via npm:\n  \n    $ npm install systemd\n\n  Require the systemd module and pass 'systemd' as a parameter to listen():\n\n    require('systemd');\n\n    var http = require('http');\n    http.createServer(function (req, res) {\n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end('Hello World\\n');\n    }).listen('systemd');\n  \n  Install a systemd socket file (e.g.: /etc/systemd/system/node-hello.socket):\n\n    [Socket]\n    ListenStream=1337\n\n    [Install]\n    WantedBy=sockets.target\n\n  Install a systemd service file (e.g.: /etc/systemd/system/node-hello.service):\n\n    # Adjust according to man 5 systemd.exec\n\n    [Service]\n    ExecStart=/path/to/bin/node /path/to/hello.js\n    StandardOutput=syslog\n    User=nobody\n    Group=nobody\n\n  Be sure to subtitute the paths to node and your script!\n\n  Reload the systemd daemon so that it picks up the new unit files:\n\n    systemctl --system daemon-reload\n\n  Enable and start the socket:\n\n    systemctl enable node-hello.socket\n    systemctl start node-hello.socket\n\n  Check the status of the socket:\n\n    # systemctl status node-hello.socket\n    node-hello.socket\n          Loaded: loaded (/etc/systemd/system/node-hello.socket)\n          Active: active (listening) since Sat, 15 Oct 2011 20:27:47 +0200; 2s ago\n          CGroup: name=systemd:/system/node-hello.socket\n\n  Great, it's running!\n\n  Check the status of the service, not running yet:\n\n    # systemctl status node-hello.service\n    node-hello.service\n          Loaded: loaded (/etc/systemd/system/node-hello.service)\n          Active: inactive (dead)\n          CGroup: name=systemd:/system/node-hello.service\n\n  Do a request to your service:\n\n    # curl -i http://localhost:1337/\n    HTTP/1.1 200 OK\n    Content-Type: text/plain\n    Connection: keep-alive\n    Transfer-Encoding: chunked\n    \n    Hello World\n\n  Check again, now it will be running:\n\n    # systemctl status node-hello.service\n    node-hello.service\n          Loaded: loaded (/etc/systemd/system/node-hello.service)\n          Active: active (running) since Sat, 15 Oct 2011 20:32:10 +0200; 38s ago\n        Main PID: 1159 (node)\n          CGroup: name=systemd:/system/node-hello.service\n                  â”” 1159 /path/to/bin/node /path/to/hello.js\n\n## Only listen to systemd when running under systemd\n\n  You can make the systemd usage conditional by checking for the systemd environment variable:\n\n    var http = require('http');\n    \n    require('systemd');\n    \n    var port = process.env.LISTEN_PID > 0 ? 'systemd' : 1337;\n    http.createServer(function (req, res) {\n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end('Hello World\\n');\n    }).listen(port);\n\n  This makes it possible to run the script stand-alone in development, yet use systemd when started through systemd.\n    \n## Contributing\n\n  A jshint file is included to check code style.\n\n  Before submitting a pull request, please check your code. For convenience, I've also added a grunt file.\n\n  Install the dev dependencies:\n\n    npm install --dev\n\n  Install the grunt cli if you haven't already done so:\n\n    npm -g install grunt-cli\n\n  Run it:\n\n    grunt\n\n## License \n\n    (The MIT License)\n\n    Copyright (C) 2011-2013 by Ruben Vermeersch <ruben@savanne.be>\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n","readmeFilename":"README.md","repository":"[Circular]","_id":"systemd@0.2.5","dist":{"shasum":"c77bb2db40c07797bfdda2ffc9614ee0d7d42140","tarball":"https://registry.npmjs.org/systemd/-/systemd-0.2.5.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"rubenv","email":"ruben@savanne.be"},"maintainers":[{"name":"rubenv","email":"ruben@savanne.be"}],"directories":{}},"0.2.6":{"name":"systemd","version":"0.2.6","main":"./lib/systemd.js","description":"systemd socket activation support for Node.js","keywords":["systemd"],"url":"http://github.com/rubenv/node-systemd","repository":{"type":"git","url":"git://github.com/rubenv/node-systemd.git"},"bugs":{"url":"https://github.com/rubenv/node-systemd/issues"},"author":{"name":"Ruben Vermeersch","email":"ruben@savanne.be","url":"http://savanne.be/"},"contributors":[],"licenses":[{"type":"MIT","url":"https://github.com/rubenv/node-systemd/blob/master/LICENSE"}],"dependencies":{},"engines":{"node":">=0.6.11 <0.11.0"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-jshint":"~0.2.0","grunt-release":"~0.5.1"},"readme":"# systemd for Node.js\n\n  Adds support for running node.js as a socket-activated service under systemd.\n\n  More info on the how and why: http://savanne.be/articles/deploying-node-js-with-systemd/\n  \n  For more background on socket activation: http://0pointer.de/blog/projects/socket-activation.html\n\n  Obviously, this will only work on Linux distributions with systemd (such as Fedora).\n\n  Developed by Flow Pilots: http://www.flowpilots.com/\n\n## Usage\n  \n  You can install the latest version via npm:\n  \n    $ npm install systemd\n\n  Require the systemd module and pass 'systemd' as a parameter to listen():\n\n    require('systemd');\n\n    var http = require('http');\n    http.createServer(function (req, res) {\n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end('Hello World\\n');\n    }).listen('systemd');\n  \n  Install a systemd socket file (e.g.: /etc/systemd/system/node-hello.socket):\n\n    [Socket]\n    ListenStream=1337\n\n    [Install]\n    WantedBy=sockets.target\n\n  Install a systemd service file (e.g.: /etc/systemd/system/node-hello.service):\n\n    # Adjust according to man 5 systemd.exec\n\n    [Service]\n    ExecStart=/path/to/bin/node /path/to/hello.js\n    StandardOutput=syslog\n    User=nobody\n    Group=nobody\n\n  Be sure to subtitute the paths to node and your script!\n\n  Reload the systemd daemon so that it picks up the new unit files:\n\n    systemctl --system daemon-reload\n\n  Enable and start the socket:\n\n    systemctl enable node-hello.socket\n    systemctl start node-hello.socket\n\n  Check the status of the socket:\n\n    # systemctl status node-hello.socket\n    node-hello.socket\n          Loaded: loaded (/etc/systemd/system/node-hello.socket)\n          Active: active (listening) since Sat, 15 Oct 2011 20:27:47 +0200; 2s ago\n          CGroup: name=systemd:/system/node-hello.socket\n\n  Great, it's running!\n\n  Check the status of the service, not running yet:\n\n    # systemctl status node-hello.service\n    node-hello.service\n          Loaded: loaded (/etc/systemd/system/node-hello.service)\n          Active: inactive (dead)\n          CGroup: name=systemd:/system/node-hello.service\n\n  Do a request to your service:\n\n    # curl -i http://localhost:1337/\n    HTTP/1.1 200 OK\n    Content-Type: text/plain\n    Connection: keep-alive\n    Transfer-Encoding: chunked\n    \n    Hello World\n\n  Check again, now it will be running:\n\n    # systemctl status node-hello.service\n    node-hello.service\n          Loaded: loaded (/etc/systemd/system/node-hello.service)\n          Active: active (running) since Sat, 15 Oct 2011 20:32:10 +0200; 38s ago\n        Main PID: 1159 (node)\n          CGroup: name=systemd:/system/node-hello.service\n                  â”” 1159 /path/to/bin/node /path/to/hello.js\n\n## Only listen to systemd when running under systemd\n\n  You can make the systemd usage conditional by checking for the systemd environment variable:\n\n    var http = require('http');\n    \n    require('systemd');\n    \n    var port = process.env.LISTEN_PID > 0 ? 'systemd' : 1337;\n    http.createServer(function (req, res) {\n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end('Hello World\\n');\n    }).listen(port);\n\n  This makes it possible to run the script stand-alone in development, yet use systemd when started through systemd.\n    \n## Contributing\n\n  A jshint file is included to check code style.\n\n  Before submitting a pull request, please check your code. For convenience, I've also added a grunt file.\n\n  Install the dev dependencies:\n\n    npm install --dev\n\n  Install the grunt cli if you haven't already done so:\n\n    npm -g install grunt-cli\n\n  Run it:\n\n    grunt\n\n## License \n\n    (The MIT License)\n\n    Copyright (C) 2011-2013 by Ruben Vermeersch <ruben@savanne.be>\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n","readmeFilename":"README.md","homepage":"https://github.com/rubenv/node-systemd","_id":"systemd@0.2.6","dist":{"shasum":"f6ba807969183b7bbaf2b823f7e86b4bf93cb367","tarball":"https://registry.npmjs.org/systemd/-/systemd-0.2.6.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"rubenv","email":"ruben@savanne.be"},"maintainers":[{"name":"rubenv","email":"ruben@savanne.be"}],"directories":{}}},"maintainers":[{"name":"rubenv","email":"ruben@savanne.be"}],"time":{"modified":"2017-03-19T02:22:31.045Z","created":"2011-10-16T09:44:58.892Z","0.0.1":"2011-10-16T09:45:00.465Z","0.0.2":"2011-10-16T15:08:20.139Z","0.2.0":"2012-03-31T23:12:49.697Z","0.2.1":"2012-07-27T11:57:51.138Z","0.2.2":"2012-11-08T08:48:02.640Z","0.2.3":"2013-05-15T13:32:16.392Z","0.2.4":"2013-05-21T15:11:10.372Z","0.2.5":"2013-09-16T13:17:42.620Z","0.2.6":"2013-11-22T15:34:30.748Z"},"author":{"name":"Ruben Vermeersch","email":"ruben@savanne.be","url":"http://savanne.be/"},"users":{"fgribreau":true,"bmedicke":true,"shujianbu":true,"francisbrito":true,"lvpeng101":true},"repository":{"type":"git","url":"git://github.com/rubenv/node-systemd.git"},"_attachments":{},"_etag":"W/\"58cdeb67-9497\"","_lastModified":"Sun, 19 Mar 2017 02:22:31 GMT"}